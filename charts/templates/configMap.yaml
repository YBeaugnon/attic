apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-config-map
  namespace: {{ .Release.Namespace }}
data:
  config.toml: |
    # networking
    listen = "[::]:80"
    allowed-hosts = [{{ .Values.allowed_hosts }}]
    api-endpoint = {{ .Values.api_endpoint | quote }}
    # cache settings
    soft-delete-caches = {{ .Values.soft_delete_caches | default false }}
    require-proof-of-possession = {{ .Values.require_proof_of_possession | default true }}

    token-hs256-secret-base64 = "THE4ZUhpdjBZM2hsNGdsTE5kWXB0QkdRWGk1U0JjV01PaFBWSVBIYUZkZHRtVjQwMmIydUh1eFY0YXdMMlJHSXRmdXI0Q2ZMMkFNdndTQ2k4RERmam1xRXFQQWZCVnR6MW45QXVJc2J2Nm0xVDRpbDAwTHNpbjZYYjkyR0FJVU0="
    [database]
    # database url is passed via env var.
    url = "sqlite:///data/server.db"
    heartbeat = {{ .Values.database.hearbeat | default false }}

    [storage]
    {{ if  eq .Values.storage.type "s3" }}
    type = "s3"
    region = {{ .Values.storage.s3.region | quote }}
    bucket = {{ .Values.storage.s3.bucket | quote }}
    endpoint = {{ .Values.storage.s3.endpoint | quote }}
    {{ else if eq .Values.storage.type "local" }}
    type = "local"
    path = "/data"
    {{ end }}

    [chunking]
    nar-size-threshold = {{ .Values.chunking.nar_size_treshold }}
    min-size = {{ .Values.chunking.min_size }}
    avg-size = {{ .Values.chunking.avg_size }}
    max-size = {{ .Values.chunking.max_size }}

    [compression]
    type = {{ .Values.compression.type | quote }}
    level = {{ .Values.compression.level }}
